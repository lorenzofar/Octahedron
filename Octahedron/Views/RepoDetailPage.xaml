<Page
    x:Class="Octahedron.Views.RepoDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Octahedron.Views"
    xmlns:controls="using:Template10.Controls"
    xmlns:templates="using:Octahedron.Templates"
    xmlns:converters="using:Octahedron.Converters"
    xmlns:models="using:Octahedron.Models"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:behaviors="using:Template10.Behaviors"
    xmlns:markdown="using:UniversalMarkdown"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding Source={StaticResource ViewModelLocator}, Path=RepoDetail}"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:InfoDisplayConverter x:Key="InfoConverter"/>
        <converters:ForkConverter x:Key="ForkConverter"/>
        <converters:PivotBarConverter x:Key="PivotBarConverter"/>
        <converters:PopupIndexConverter x:Key="PopupIndexConverter"/>
        <converters:ListPlaceholderConverter x:Key="ListPlaceholderConverter"/>
        <converters:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
        <converters:BoolConverter x:Key="BoolConverter"/>
        <converters:ContentPathConverter x:Key="ContentPathConverter"/>
        <converters:CapitalizeConverter x:Key="CapitalizeConverter"/>
        <CollectionViewSource x:Name="commitsCVS" Source="{Binding commitGroups}" IsSourceGrouped="True" />
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="info_header.Visibility" Value="Collapsed"/>
                        <Setter Target="code_header.Visibility" Value="Collapsed"/>
                        <Setter Target="issues_header.Visibility" Value="Collapsed"/>
                        <Setter Target="pull_header.Visibility" Value="Collapsed"/>
                        <Setter Target="history_header.Visibility" Value="Collapsed"/>
                        <Setter Target="milestones_header.Visibility" Value="Collapsed"/>
                        <Setter Target="people_header.Visibility" Value="Collapsed"/>
                        <Setter Target="settings_header.Visibility" Value="Collapsed"/>
                        <Setter Target="goUp_txt.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="info_header.Visibility" Value="Visible"/>
                        <Setter Target="code_header.Visibility" Value="Visible"/>
                        <Setter Target="issues_header.Visibility" Value="Visible"/>
                        <Setter Target="pull_header.Visibility" Value="Visible"/>
                        <Setter Target="history_header.Visibility" Value="Visible"/>
                        <Setter Target="milestones_header.Visibility" Value="Visible"/>
                        <Setter Target="people_header.Visibility" Value="Visible"/>
                        <Setter Target="settings_header.Visibility" Value="Visible"/>
                        <Setter Target="goUp_txt.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:PageHeader Frame="{x:Bind Frame}" Content="{Binding repo.Name, Converter={StaticResource CapitalizeConverter}}" Style="{StaticResource pageHeader}"/>

        <Pivot Grid.Row="1" SelectedIndex="{Binding pivotIndex, Mode=TwoWay}" Visibility="{Binding loading, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=false}">
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF001;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="info_header" x:Uid="info_header" Margin="12,0,0,4" Text="Info"/>
                    </StackPanel>
                </PivotItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Padding="12" Background="{StaticResource SystemControlBackgroundAccentBrush}">
                            <TextBlock Foreground="White" Text="{Binding repo.Name}" HorizontalAlignment="Center" Style="{ThemeResource HeaderTextBlockStyle}" />
                            <TextBlock Foreground="White" Text="{Binding repo.Parent, Converter={StaticResource ForkConverter}}" Visibility="{Binding repo.Parent, Converter={StaticResource InfoConverter}}" Style="{ThemeResource CaptionTextBlockStyle}" Margin="0,0,0,6" HorizontalAlignment="Center">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding OpenParent}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            </TextBlock>
                            <TextBlock Foreground="White" Text="{Binding repo.Owner.Login}" HorizontalAlignment="Center" Style="{ThemeResource SubtitleTextBlockStyle}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{Binding OpenProfile}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            </TextBlock>
                            <TextBlock Foreground="White" Text="{Binding repo.Language}" HorizontalAlignment="Center" />
                            <ScrollViewer Margin="12" HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto">
                                <TextBlock Foreground="White" HorizontalAlignment="Center" Text="{Binding repo.Description}" MaxHeight="100" TextWrapping="Wrap" />
                            </ScrollViewer>
                            <Grid Margin="0,6,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <StackPanel HorizontalAlignment="Center">
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" Text="{Binding repo.ForksCount}" Style="{ThemeResource TitleTextBlockStyle}" />
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" x:Uid="forks_txt" />
                                </StackPanel>
                                <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" Text="{Binding repo.StargazersCount}" Style="{ThemeResource TitleTextBlockStyle}" />
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" x:Uid="stars_txt" />
                                </StackPanel>
                                <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" Text="{Binding repo.OpenIssuesCount}" Style="{ThemeResource TitleTextBlockStyle}" />
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" x:Uid="issues_txt" />
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                        <markdown:MarkdownTextBlock x:Name="readme" Markdown="{Binding readme}" Grid.Row="1" Margin="0,12">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="OnMarkdownLinkTapped">
                                    <core:InvokeCommandAction Command="{Binding HandleReadmeClick}"/>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </markdown:MarkdownTextBlock>
                    </Grid>
                </ScrollViewer>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF05F;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="code_header" x:Uid="code_header" Margin="12,0,0,4" Text="Code"/>
                    </StackPanel>
                </PivotItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid BorderThickness="0,0,0,2" BorderBrush="#999999">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding content[0], Converter={StaticResource ContentPathConverter}}" VerticalAlignment="Center" Style="{ThemeResource FlyoutPickerTitleTextBlockStyle}"/>
                        <Button Grid.Column="1" Background="Transparent" Command="{Binding GoUpContent}" Style="{StaticResource TransparentButton}">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xE110;"/>
                                <TextBlock x:Name="goUp_txt" x:Uid="goUp_txt" Text="Go up" Margin="8,0"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                    <ListView ItemsSource="{Binding content}" Margin="-12,0" Grid.Row="1" SelectionMode="None" IsItemClickEnabled="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <templates:ContentItem/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="ItemClick">
                                <core:InvokeCommandAction Command="{Binding OpenContent}" />
                            </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                    </ListView>
                </Grid>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF026;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="issues_header" x:Uid="issues_header" Margin="12,0,0,4" Text="Issues"/>
                    </StackPanel>
                </PivotItem.Header>
                <Grid>
                    <ListView ItemsSource="{Binding issues}" Margin="-12,0" SelectionMode="None" IsItemClickEnabled="True">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="ItemClick">
                                <core:InvokeCommandAction Command="{Binding OpenIssue}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <templates:IssuesListItem/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <TextBlock x:Uid="issues_placeholder" TextWrapping="Wrap" Visibility="{Binding issues, ConverterParameter='issues', Converter={StaticResource ListPlaceholderConverter}}" Foreground="#999999" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF009;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="pull_header" x:Uid="pull_header" Margin="12,0,0,4" Text="Pull"/>
                    </StackPanel>
                </PivotItem.Header>
                <Grid>
                    <ListView ItemsSource="{Binding pulls}" Margin="-12,0" SelectionMode="None" IsItemClickEnabled="True">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="ItemClick">
                                <core:InvokeCommandAction Command="{Binding OpenPull}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <templates:PullsListItem/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <TextBlock x:Uid="pulls_placeholder" TextWrapping="Wrap" Visibility="{Binding pulls, ConverterParameter='pulls', Converter={StaticResource ListPlaceholderConverter}}" Foreground="#999999" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF07E;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="history_header" x:Uid="history_header" Margin="12,0,0,4" Text="History"/>
                    </StackPanel>
                </PivotItem.Header>
                <Grid>
                    <ListView ItemsSource="{Binding Source={StaticResource commitsCVS}}" Margin="-12,0" SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <templates:RepoCommitListItem/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate x:DataType="models:GroupInfoList">
                                        <TextBlock Text="{x:Bind Key}" Foreground="#999999"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                </Grid>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF075;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="milestones_header" x:Uid="milestones_header" Margin="12,0,0,4" Text="Milestones"/>
                    </StackPanel>
                </PivotItem.Header>
                <Grid>
                    <ListView ItemsSource="{Binding milestonesList}" Margin="-12,0" SelectionMode="None" >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <templates:MilestonesListItem/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <TextBlock x:Uid="milestones_placeholder" TextWrapping="Wrap" Visibility="{Binding milestonesList, ConverterParameter='milestones', Converter={StaticResource ListPlaceholderConverter}}" Foreground="#999999" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </PivotItem>
            <PivotItem>
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF037;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="people_header" x:Uid="people_header" Margin="12,0,0,4" Text="People"/>
                    </StackPanel>
                </PivotItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListView ItemsSource="{Binding collaborators}" Visibility="{Binding owner, Converter={StaticResource BoolVisibilityConverter}}" x:Uid="members_list" Margin="0,0,0,12" IsItemClickEnabled="True" SelectionMode="None">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{Binding OpenUser}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <ListView.Header>
                                <TextBlock x:Uid="members_header" FontWeight="SemiBold" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                            </ListView.Header>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <templates:UserListItem/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>

                        <ListView Grid.Row="1" ItemsSource="{Binding contributorsList}" IsItemClickEnabled="True" SelectionMode="None">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{Binding OpenUser}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <ListView.Header>
                                <TextBlock x:Uid="contributors_header" FontWeight="SemiBold" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                            </ListView.Header>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <templates:UserListItem/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <TextBlock Grid.Row="1" x:Uid="contributors_placeholder" TextWrapping="Wrap" Visibility="{Binding contributorsList, ConverterParameter='contributors', Converter={StaticResource ListPlaceholderConverter}}" Foreground="#999999" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ScrollViewer>
            </PivotItem>
            <PivotItem Visibility="{Binding owner, Converter={StaticResource BoolVisibilityConverter}}">
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xF02F;" FontFamily="ms-appx:/Assets/octicons.ttf#octicons"/>
                        <TextBlock x:Name="settings_header" x:Uid="settings_txt" Margin="12,0,0,4" Text="Settings"/>
                    </StackPanel>
                </PivotItem.Header>
            </PivotItem>
        </Pivot>

        <StackPanel Grid.Row="1" Margin="12" Visibility="{Binding loading, Converter={StaticResource BoolVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Viewbox MaxHeight="60" MaxWidth="60">
                <ProgressRing IsActive="{Binding loading}" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Width="60" Height="60"/>
            </Viewbox>
            <TextBlock Margin="0,12,0,0" Text="{Binding loadingProgress}"/>
        </StackPanel>

        <CommandBar Grid.Row="2" IsEnabled="{Binding loading, Converter={StaticResource BoolConverter}, ConverterParameter=false}">
            <!--INFO TAB-->
            <AppBarToggleButton x:Uid="watch_btn" Command="{Binding WatchRepo}" IsChecked="{Binding watched, Mode=TwoWay}" Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=0}">
                <AppBarToggleButton.Icon>
                    <FontIcon Glyph="&#xE052;"/>
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>
            <AppBarToggleButton x:Uid="star_btn" Command="{Binding StarRepo}" Margin="6,0,0,0" Icon="Favorite" IsChecked="{Binding starred, Mode=TwoWay}" Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=0}"/>
            <!--ISSUES TAB-->
            <AppBarButton x:Uid="filter_btn" x:Name="filter_issues_btn" Icon="Filter"  Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=2}">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="filter_all" Command="{Binding FilterIssues}" CommandParameter="0" Background="{Binding issuesIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=0}"/>
                        <MenuFlyoutItem x:Uid="filter_open" Command="{Binding FilterIssues}" CommandParameter="1" Background="{Binding issuesIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=1}"/>
                        <MenuFlyoutItem x:Uid="filter_closed" Command="{Binding FilterIssues}" CommandParameter="2" Background="{Binding issuesIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=2}"/>
                        <!--<MenuFlyoutSeparator/>
                        <MenuFlyoutItem x:Uid="filter_all" Command="{Binding FilterIssuesUser}" CommandParameter="0" Background="{Binding issuesFilterIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=0}"/>
                        <MenuFlyoutItem x:Uid="filter_assigned" Command="{Binding FilterIssuesUser}" CommandParameter="1" Background="{Binding issuesFilterIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=1}"/>
                        <MenuFlyoutItem x:Uid="filter_created" Command="{Binding FilterIssuesUser}" CommandParameter="2" Background="{Binding issuesFilterIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=2}"/>
                        <MenuFlyoutItem x:Uid="filter_mentioned" Command="{Binding FilterIssuesUser}" CommandParameter="3" Background="{Binding issuesFilterIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=3}"/>
                        <MenuFlyoutItem x:Uid="filter_subscribed" Command="{Binding FilterIssuesUser}" CommandParameter="4" Background="{Binding issuesFilterIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=4}"/>-->
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <behaviors:OpenFlyoutAction />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton x:Uid="new_btn" Icon="Add" Command="{Binding AddIssue}" Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=2}"/>
            <!--PULLS TAB-->
            <AppBarButton x:Uid="filter_btn" x:Name="filter_pulls_btn" Icon="Filter"  Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=3}">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="filter_all" Command="{Binding FilterPulls}" CommandParameter="0" Background="{Binding pullsIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=0}"/>
                        <MenuFlyoutItem x:Uid="filter_open" Command="{Binding FilterPulls}" CommandParameter="1" Background="{Binding pullsIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=1}"/>
                        <MenuFlyoutItem x:Uid="filter_closed" Command="{Binding FilterPulls}" CommandParameter="2" Background="{Binding pullsIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=2}"/>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <behaviors:OpenFlyoutAction />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <!--MILESTONES TAB-->
            <AppBarButton x:Uid="filter_btn" x:Name="filter_milestones_btn" Icon="Filter" Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=5}">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="filter_all" Command="{Binding FilterMilestones}" CommandParameter="0" Background="{Binding milestonesIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=0}"/>
                        <MenuFlyoutItem x:Uid="filter_open" Command="{Binding FilterMilestones}" CommandParameter="1" Background="{Binding milestonesIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=1}"/>
                        <MenuFlyoutItem x:Uid="filter_closed" Command="{Binding FilterMilestones}" CommandParameter="2" Background="{Binding milestonesIndex, Converter={StaticResource PopupIndexConverter}, ConverterParameter=2}"/>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <behaviors:OpenFlyoutAction />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton x:Uid="new_btn" Icon="Add" Command="{Binding AddMilestone}" IsEnabled="{Binding owner}" Visibility="{Binding pivotIndex, Converter={StaticResource PivotBarConverter}, ConverterParameter=5}"/>
        </CommandBar>
    </Grid>
</Page>